let scene,engine,light,sphereMesh,seamMesh,axisMesh,arrowMesh,varrowMesh,allStitches,theta,points,currentOmega=[0,0,1],initialized=!1;function initBabylon(){const e=document.getElementById("spin_axis_plot");engine=new BABYLON.Engine(e,!0),scene=new BABYLON.Scene(engine);const t=new BABYLON.ArcRotateCamera("camera",Math.PI/2,Math.PI,4,new BABYLON.Vector3(0,0,0),scene);t.attachControl(e,!0),t.lowerRadiusLimit=t.radius,t.upperRadiusLimit=t.radius,light=new BABYLON.HemisphericLight("light",new BABYLON.Vector3(0,0,1),scene),scene.clearColor=new BABYLON.Color3(1,1,1),window.addEventListener("resize",()=>engine.resize())}function generateSphere(){sphereMesh=BABYLON.MeshBuilder.CreateSphere("sphere",{diameter:2,segments:30},scene);const e=new BABYLON.StandardMaterial("sphereMat",scene);e.diffuseColor=new BABYLON.Color3(1,1,1),e.specularColor=new BABYLON.Color3(0,0,0),sphereMesh.material=e}function generateSeam(e=100){points=[];let t=1.01;for(let a=0;a<e;a++){const n=-Math.PI+2*Math.PI*a/(e-1),r=t*Math.cos(n)**3,o=t*Math.sin(n)**3,s=t*(Math.sqrt(3)/2)*Math.sin(2*n);points.push(new BABYLON.Vector3(r,o,s))}seamMesh=BABYLON.MeshBuilder.CreateTube("tube",{path:points,radius:.02,updatable:!0},scene);const a=new BABYLON.StandardMaterial("stringMat",scene);a.diffuseColor=new BABYLON.Color3(1,0,0),a.specularColor=new BABYLON.Color3(0,0,0),seamMesh.material=a,addStitchesViaPath3D(points,plot_scene)}function addStitchesViaPath3D(e,t,a={}){const n=a.step||100,r=a.length||.08,o=a.radius||.02,s=void 0!==a.angle?a.angle:Math.PI/4,i=void 0!==a.seamOffset?a.seamOffset:.02,B=(void 0!==a.seamRadius&&a.seamRadius,new BABYLON.StandardMaterial("stitchMat",t));B.diffuseColor=new BABYLON.Color3(1,0,0),B.specularColor=new BABYLON.Color3(0,0,0);const l=new BABYLON.Path3D(e),c=l.getCurve(),h=l.getTangents(),m=l.getNormals(),d=l.getBinormals(),u=[];for(let e=0;e<c.length;e+=n){const a=c[e].clone(),n=h[e].clone().normalize(),l=m[e].clone().normalize(),O=d[e].clone().normalize(),M=BABYLON.Matrix.RotationAxis(n,s),p=BABYLON.Vector3.TransformCoordinates(O,M).normalize(),A=a.add(l.scale(i)),L=p.scale(.5*r),g=A.add(L.scale(-1)),N=A.add(L),w=BABYLON.MeshBuilder.CreateTube("stitch",{path:[g,N],radius:o,updatable:!1,sideOrientation:BABYLON.Mesh.DOUBLESIDE},t);w.material=B,u.push(w)}const O=BABYLON.Mesh.MergeMeshes(u,!0,!0,void 0,!1,!0);return O.name="allStitches",O.material=B,O}function generateSpinAxis(e){points=[],points.push(new BABYLON.Vector3(1.2*-e[0],1.2*-e[1],1.2*-e[2])),points.push(new BABYLON.Vector3(1.3*e[0],1.3*e[1],1.3*e[2])),axisMesh=BABYLON.MeshBuilder.CreateTube("axis",{path:points,radius:.04,updatable:!0},scene),axisMesh.material=new BABYLON.StandardMaterial("arrowMat",scene),axisMesh.material.diffuseColor=new BABYLON.Color3(0,0,0),axisMesh.material.specularColor=new BABYLON.Color3(0,0,0),arrowMesh=BABYLON.MeshBuilder.CreateCylinder("arrow",{diameterTop:0,diameterBottom:.2,height:.2},scene),arrowMesh.material=new BABYLON.StandardMaterial("arrowMat",scene),arrowMesh.material.diffuseColor=new BABYLON.Color3(0,0,0),arrowMesh.material.specularColor=new BABYLON.Color3(0,0,0),arrowMesh.position=points[1].clone();const t=new BABYLON.Path3D(points),a=(t.getCurve(),t.getTangents()),n=t.getNormals(),r=t.getBinormals();arrowMesh.rotation=BABYLON.Vector3.RotationFromAxis(r[1],a[1],n[1])}function quaternionFromUnitVectors(e,t){const a=e.normalize(),n=t.normalize(),r=BABYLON.Vector3.Dot(a,n);if(r<-.999999){let e=new BABYLON.Vector3(1,0,0);Math.abs(a.x)>.9&&(e=new BABYLON.Vector3(0,1,0));const t=BABYLON.Vector3.Cross(a,e).normalize();return BABYLON.Quaternion.RotationAxis(t,Math.PI)}const o=BABYLON.Vector3.Cross(a,n),s=Math.sqrt(2*(1+r)),i=1/s;return new BABYLON.Quaternion(o.x*i,o.y*i,o.z*i,.5*s).normalize()}function alignSeams(e,t){const a=quaternionFromUnitVectors(new BABYLON.Vector3(Math.SQRT1_2,Math.SQRT1_2,0),new BABYLON.Vector3(t[0],t[1],t[2]));e.rotationQuaternion=a}function rotateSeams(e,t){const a=new BABYLON.Vector3(e[0],e[1],e[2]);theta=-.10472*t/60*.01,seamMesh.rotate(a,theta,BABYLON.Space.WORLD)}function updateAnimation(e){axisMesh.dispose(),arrowMesh.dispose(),seamMesh.dispose(),generateSpinAxis(e),generateSeam()}function animatePitch(e,t,a=[0,0,0]){currentOmega=e.map((e,t)=>0===t?-e:e),currentV0=a.map((e,t)=>0===t?-e:e),initialized?(updateAnimation(currentOmega),alignSeams(seamMesh,currentOmega),engine.stopRenderLoop(),engine.runRenderLoop(()=>{scene.render(),rotateSeams(currentOmega,t)})):(initBabylon(),generateSphere(),generateSpinAxis(currentOmega),generateSeam(),alignSeams(seamMesh,currentOmega),engine.runRenderLoop(()=>{scene.render(),rotateSeams(currentOmega,t)}),initialized=!0)}