let camera_settings,x_cam,plot_canvas,plot_scene,plot_engine,plot_camera,plot_light,vertices,catcher_view=!0,scale=1;const m_to_feet=1/.3048*scale;let oldData,oldDataNoSpin,pitch,pitch_nospin,start,end,end_nospin,dp,dp_nospin,pitch0,end0,dp0,init=!1,meshes=[];const x_90=[Math.PI/2,0,0],y_90=[0,Math.PI/2,0],z_90=[0,0,Math.PI/2],z_45=[0,0,Math.PI/4],z_45_n=[0,0,-Math.PI/4],alpha0=Math.PI/2,beta0=Math.PI*(31/64),radius0=20,target0=new BABYLON.Vector3(0,10,2.5),ball_diam=.25,root2=Math.sqrt(2)/2,x_1b=-90*root2,y_1b=90*root2,x_3b=90*root2,y_3b=90*root2,x_2b=0,y_2b=90*root2*2;let x,y,z;const resolution=2e3;function makeVector3List(e,t,a){if(e.length!==t.length||e.length!==t.length)throw new Error("x, y, z arrays must have the same length");const o=[];for(let n=0;n<e.length;n++)o.push(new BABYLON.Vector3(e[n]*scale,t[n]*scale,a[n]*scale));return o}function makeVector2List(e,t){if(e.length!==t.length)throw new Error("x, y arrays must have the same length");const a=[];for(let o=0;o<e.length;o++)a.push(new BABYLON.Vector2(e[o]*scale,t[o]*scale));return a}function makeTube(e,t,a,o,n=.05){const r=BABYLON.MeshBuilder.CreateTube(o,{path:e,radius:n,updatable:!0},plot_scene);return r.material=new BABYLON.StandardMaterial(`${o}Mat`,plot_scene),r.material.diffuseColor=new BABYLON.Color3(...t),r.material.specularColor=new BABYLON.Color3(0,0,0),r.material.emissiveColor=new BABYLON.Color3(0,0,0),r.material.alpha=a,r}function makeHStrip(e,t,a,o){const n=[new BABYLON.Vector3(e.x,e.y,e.z),new BABYLON.Vector3(t.x,t.y,t.z)],r=[new BABYLON.Vector3(e.x,e.y+o*a,e.z),new BABYLON.Vector3(t.x,t.y+o*a,t.z)];return BABYLON.MeshBuilder.CreateRibbon("null",{pathArray:[n,r],sideOrientation:BABYLON.Mesh.DOUBLESIDE},scene)}function makeVStrip(e,t,a,o){const n=[new BABYLON.Vector3(e.x,e.y,e.z),new BABYLON.Vector3(t.x,t.y,t.z)],r=[new BABYLON.Vector3(e.x+o*a,e.y,e.z),new BABYLON.Vector3(t.x+o*a,t.y,t.z)];return BABYLON.MeshBuilder.CreateRibbon("null",{pathArray:[n,r],sideOrientation:BABYLON.Mesh.DOUBLESIDE},scene)}function makeBox(e,t,a,o,n){mesh1=makeHStrip(e[0],e[1],t,1),mesh2=makeVStrip(e[1],e[2],t,1),mesh3=makeHStrip(e[2],e[3],t,-1),mesh4=makeVStrip(e[3],e[0],t,-1);const r=BABYLON.Mesh.MergeMeshes([mesh1,mesh2,mesh3,mesh4],!0,!0,void 0,!1,!0),i=new BABYLON.StandardMaterial(`${n}Mat`,scene);return i.diffuseColor=new BABYLON.Color3(...a),i.specularColor=new BABYLON.Color3(0,0,0),i.emissiveColor=new BABYLON.Color3(0,0,0),i.alpha=o,r.material=i,r}function makeMarker(e,t,a,o,n=.05){const r=BABYLON.MeshBuilder.CreateSphere(o,{diameter:n},plot_scene);return r.position=new BABYLON.Vector3(...e),r.material=new BABYLON.StandardMaterial(`${o}Mat`,plot_scene),r.material.diffuseColor=new BABYLON.Color3(...t),r.material.specularColor=new BABYLON.Color3(0,0,0),r.material.emissiveColor=new BABYLON.Color3(0,0,0),r.material.alpha=a,r}function makeSquare(e,t,a,o,n){const r=BABYLON.Vector3.Distance(e[0],e[1]),i=BABYLON.Vector3.Distance(e[1],e[2]),s=BABYLON.MeshBuilder.CreatePlane(n,{width:r,height:i,sideOrientation:BABYLON.Mesh.DOUBLESIDE},plot_scene);return s.position=computeCenter(e),s.rotation=new BABYLON.Vector3(t[0],t[1],t[2]),s.material=new BABYLON.StandardMaterial(`${n}Mat`,plot_scene),s.material.diffuseColor=new BABYLON.Color3(...a),s.material.specularColor=new BABYLON.Color3(0,0,0),s.material.emissiveColor=new BABYLON.Color3(0,0,0),s.material.alpha=o,s}function makePolygon(e,t,a,o,n,r=!1){const i=new BABYLON.PolygonMeshBuilder(n,e).build();return i.material=new BABYLON.StandardMaterial(`${n}Mat`,plot_scene),i.material.diffuseColor=new BABYLON.Color3(...a),i.material.alpha=o,i.material.backFaceCulling=!1,i.rotation=new BABYLON.Vector3(t[0],t[1],t[2]),r&&(i.position=new BABYLON.Vector3(...r)),i}function computeCenter(e){const t=new BABYLON.Vector3(0,0,0);return e.forEach(e=>t.addInPlace(e)),t.scaleInPlace(1/e.length),t}function resetCamera(){const e={alpha:alpha0,beta:beta0,radius:20,target:target0},t=Object.entries(e).map(([e,t])=>{const a="target"===e?BABYLON.Animation.ANIMATIONTYPE_VECTOR3:BABYLON.Animation.ANIMATIONTYPE_FLOAT,o=new BABYLON.Animation("anim"+e,e,60,a,BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);return o.setKeys([{frame:0,value:plot_camera[e]},{frame:45,value:t}]),o});plot_camera.animations=t,scene.beginAnimation(plot_camera,0,45,!1)}function dpCamera(){const e={alpha:.95*Math.PI,beta:beta0,radius:40,target:new BABYLON.Vector3(0,24,2.5)},t=Object.entries(e).map(([e,t])=>{const a="target"===e?BABYLON.Animation.ANIMATIONTYPE_VECTOR3:BABYLON.Animation.ANIMATIONTYPE_FLOAT,o=new BABYLON.Animation("anim"+e,e,60,a,BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT);return o.setKeys([{frame:0,value:plot_camera[e]},{frame:45,value:t}]),o});plot_camera.animations=t,scene.beginAnimation(plot_camera,0,45,!1)}function make_kzone(e,t){let a=[-.71,.71,.71,-.71],o=[1.5,1.5,1.5,1.5],n=[e,e,t,t];vertices=makeVector3List(a,o,n),k_zone=makeSquare(vertices,x_90,[0,0,0],.05,"kzone"),a.push(a[0]),o.push(o[0]),n.push(n[0]),vertices=makeVector3List(a,o,n),k_zone_border=makeTube(vertices,[0,0,0],.75,"kzone_border",radius=.02)}function initTrajPlot(){plot_canvas=document.getElementById("plot"),plot_engine=new BABYLON.Engine(plot_canvas,!0),plot_engine.setSize(plot_canvas.clientWidth,plot_canvas.clientHeight),plot_scene=new BABYLON.Scene(plot_engine),plot_camera=new BABYLON.ArcRotateCamera("camera",alpha0,beta0,20,target0,plot_scene),plot_camera.upVector=new BABYLON.Vector3(0,0,1),plot_camera.attachControl(plot_canvas,!0),plot_light=new BABYLON.HemisphericLight("light",new BABYLON.Vector3(0,0,1),plot_scene),plot_scene.clearColor=new BABYLON.Color3(1,1,1);const e=BABYLON.MeshBuilder.CreatePlane("ground",{size:180,sideOrientation:BABYLON.Mesh.DOUBLESIDE},plot_scene);e.position=new BABYLON.Vector3(0,60.5,0);const t=new BABYLON.StandardMaterial("groundMat",plot_scene),a=new BABYLON.GrassProceduralTexture("grasstex",128,plot_scene);t.ambientTexture=a,t.alpha=.5,e.material=t;const o=17/12;x=[-o/2,o/2,o/2,0,-o/2],y=[0,0,o/2,o,o/2],vertices=makeVector2List(x,y);makePolygon(vertices,x_90,[1,1,1],1,"home_plate",pos=[0,1.5,.2]);x=[-1,1,1,-1],y=[59.75,59.75,60.25,60.25],z=[.6,.6,.6,.6],vertices=makeVector3List(x,y,z);makeSquare(vertices,[0,0,0],[1,1,1],1,"rubber");let n=[.85,.78,.65];const r=BABYLON.MeshBuilder.CreateSphere("mound",{slice:.4,diameterX:12,diameterY:1,diameterZ:12,sideOrientation:BABYLON.Mesh.DOUBLESIDE});r.position=new BABYLON.Vector3(0,60.5,.1),r.rotation=new BABYLON.Vector3(...x_90),r.material=new BABYLON.StandardMaterial("moundMat",plot_scene),r.material.diffuseColor=new BABYLON.Color3(...[.63671875,.56640625,.45703125]),r.material.specularColor=new BABYLON.Color3(0,0,0),r.material.emissiveColor=new BABYLON.Color3(0,0,0),basepath_w=4,x=[45,-45,-45,45],y=[15.5,15.5,105.5,105.5];let i=.01;z=[i,i,i,i],vertices=makeVector3List(x,y,z);const s=makeBox(vertices,basepath_w,n,1,"basepath");s.setPivotPoint(new BABYLON.Vector3(0,60.5,0),BABYLON.Space.WORLD),s.rotate(BABYLON.Axis.Z,Math.PI/4,BABYLON.Space.WORLD),s.position.y+=basepath_w,w_base=3*root2,x=[x_3b,x_3b-w_base,x_3b-2*w_base,x_3b-w_base],y=[y_3b,y_3b+w_base,y_3b,y_3b+w_base],i=.14,z=[i,i,i,i],vertices=makeVector3List(x,y,z);makeSquare(vertices,z_45,[1,1,1],1,"thirdBase");x=[x_1b+2*w_base,x_1b+w_base,x_1b,x_1b+w_base],y=[y_1b,y_1b+w_base,y_1b,y_1b+w_base],i=.14,z=[i,i,i,i],vertices=makeVector3List(x,y,z);makeSquare(vertices,z_45,[1,1,1],1,"firstBase");x=[0+w_base,0,0-w_base,0],y=[y_2b-w_base,y_2b,y_2b-w_base,y_2b],i=.14,z=[i,i,i,i],vertices=makeVector3List(x,y,z);makeSquare(vertices,z_45,[1,1,1],1,"secondBase");const l=BABYLON.MeshBuilder.CreateDisc("disc",{radius:10,sideOrientation:1},plot_scene);l.material=new BABYLON.StandardMaterial("discMat",plot_scene),l.material.diffuseColor=new BABYLON.Color3(...n),l.material.specularColor=new BABYLON.Color3(0,0,0),l.material.emissiveColor=new BABYLON.Color3(0,0,0),l.position=new BABYLON.Vector3(0,0,.1),x=[(-o-1)/2,(-o-9)/2,(-o-9)/2,(-o-1)/2],y=[-2,-2,4,4],i=.14,z=[i,i,i,i],vertices=makeVector3List(x,y,z);makeBox(vertices,.2,[1,1,1],1,"lh_box").clone("rh_box").translate(BABYLON.Axis.X,o+1+4,BABYLON.Space.WORLD),x_u=43/24,x=[x_u,x_u,-x_u,-x_u],y=[-2,-8,-8,-2],i=.14,z=[i,i,i,i],vertices=makeVector3List(x,y,z),makeVStrip(vertices[0],vertices[1],.2,1),makeVStrip(vertices[3],vertices[2],.2,-1),makeHStrip(vertices[1],vertices[2],.2,1),plot_engine.runRenderLoop(()=>{plot_scene.render()}),window.addEventListener("resize",()=>plot_engine.resize())}function generate_trajectory(e){let t=calcOdeRK4(new ODEsolver(e.derivs.bind(e),e.initial_conditions,0,1.01*e.t_f),2e3);e.scale_factor=scale;for(let a=1;a<=3;a++)t[a]&&(t[a]=t[a].map(e=>e*m_to_feet)),t[1]=t[1].map(e=>-1*e),e.data=t}function takeScreenShot(){plot_camera.alpha=5*Math.PI/8,plot_camera.beta=Math.PI*(15/32),plot_scene.getMeshByName("pitch").isVisible=!1,plot_scene.getMeshByName("start").isVisible=!1,plot_scene.getMeshByName("end").isVisible=!1,plot_scene.getMeshByName("kzone").isVisible=!1,plot_scene.getMeshByName("kzone_border").isVisible=!1,BABYLON.Tools.CreateScreenshotUsingRenderTarget(plot_engine,plot_camera,{width:1920,height:1080},e=>{const t=document.createElement("a");t.href=e,t.download="screenshot.png",t.click()},{antialias:!0})}function generateDiff(e,t){return t[3].at(-1)<e[3].at(-1)?[[t[1].at(-1),e[1].at(-1),e[1].at(-1)],[t[2].at(-1),e[2].at(-1),e[2].at(-1)],[t[3].at(-1),t[3].at(-1),e[3].at(-1)]]:[[t[1].at(-1),t[1].at(-1),e[1].at(-1)],[t[2].at(-1),t[2].at(-1),e[2].at(-1)],[t[3].at(-1),e[3].at(-1),e[3].at(-1)]]}function recalcTraj(e,t,a){pitch=plot_scene.getMeshByName("pitch"),end=plot_scene.getMeshByName("end"),dp=plot_scene.getMeshByName("dp"),plot_scene.getMeshByName("pitch0")||(end0=end.clone("end0"),end0.material=end0.material.clone("end0Mat"),end0.material.alpha=.33,dp0=dp.clone("dp0"),dp0.material=dp0.material.clone("dp0Mat"),dp0.material.alpha=.33,vertices=makeVector3List(oldData[1],oldData[2],oldData[3]),pitch0=makeTube(vertices,[0,0,0],.33,"pitch0",radius=.05)),pitch_state=new PitchState(e,t),pitch_state.omega_hat=a,solver_prime=new ODEsolver(pitch_state.derivs.bind(pitch_state),pitch_state.initial_conditions,0,1.01*pitch_state.t_f),data=calcOdeRK4(solver_prime,2e3),pitch_state.scale_factor=scale;for(let e=1;e<=3;e++)data[e]&&(data[e]=data[e].map(e=>e*m_to_feet));data[1]=data[1].map(e=>-1*e),pitch_state.data=data,vertices=makeVector3List(data[1],data[2],data[3]),BABYLON.MeshBuilder.CreateTube("pitch",{path:vertices,instance:pitch}),end.position.set(data[1].at(-1),data[2].at(-1),data[3].at(-1));let o=Math.round(.15/(data[0].at(-1)-data[0].at(-2)));return dp.position.set(data[1].at(-o),data[2].at(-o),data[3].at(-o)),pitch_state}function plot_traj(e,t=!0){let a,o=e.sz_bot,n=e.sz_top,r=new PitchState(e,1),i=new PitchState(e,0);generate_trajectory(r),generate_trajectory(i);let s=r.data,l=i.data;if(r.data_nospin=i.data,oldData=s,console.log(`Statcast final pos: (${r.x_sc}, ${r.z_sc})`),console.log(`My final pos: (${(-s[1].at(-1)/scale).toFixed(3)}, ${(s[3].at(-1)/scale).toFixed(3)}), y = ${(s[2].at(-1)/scale).toFixed(3)}`),init){plot_scene.getMeshByName("kzone").dispose(),plot_scene.getMeshByName("kzone_border").dispose(),plot_scene.getMeshByName("pitch0")&&(plot_scene.getMeshByName("pitch0").dispose(),plot_scene.getMeshByName("end0").dispose(),plot_scene.getMeshByName("dp0").dispose()),make_kzone(o,n),a=makeVector3List(s[1],s[2],s[3]),BABYLON.MeshBuilder.CreateTube("pitch",{path:a,instance:plot_scene.getMeshByName("pitch")},plot_scene),plot_scene.getMeshByName("start").position.set(s[1].at(0),s[2].at(0),s[3].at(0)),plot_scene.getMeshByName("end").position.set(s[1].at(-1),s[2].at(-1),s[3].at(-1));let e=Math.round(.15/(s[0].at(-1)-s[0].at(-2)));if(plot_scene.getMeshByName("dp").position.set(s[1].at(-e),s[2].at(-e),s[3].at(-e)),t){a=makeVector3List(l[1],l[2],l[3]),BABYLON.MeshBuilder.CreateTube("pitch_nospin",{path:a,instance:plot_scene.getMeshByName("pitch_nospin")},plot_scene),plot_scene.getMeshByName("end_nospin").position.set(l[1].at(-1),l[2].at(-1),l[3].at(-1));let e=Math.round(.15/(l[0].at(-1)-l[0].at(-2)));plot_scene.getMeshByName("dp_nospin").position.set(l[1].at(-e),l[2].at(-e),l[3].at(-e)),diff_points=generateDiff(s,l),a=makeVector3List(diff_points[0],diff_points[1],diff_points[2]),BABYLON.MeshBuilder.CreateLines("diff",{points:a,instance:plot_scene.getMeshByName("diff")},plot_scene)}}else{initTrajPlot(),init=!0,make_kzone(o,n),a=makeVector3List(s[1],s[2],s[3]);makeTube(a,[0,0,0],1,"pitch",radius=.05),makeMarker([s[1][0],s[2][0],s[3][0]],[1,0,0],1,"start",diameter=.25),makeMarker([s[1].at(-1),s[2].at(-1),s[3].at(-1)],[0,0,1],1,"end",diameter=.25);let e=Math.round(.15/(s[0].at(-1)-s[0].at(-2)));makeMarker([s[1].at(-e),s[2].at(-e),s[3].at(-e)],[0,0,0],1,"dp",diameter=.25);if(t){a=makeVector3List(l[1],l[2],l[3]);makeTube(a,[0,0,0],.33,"pitch_nospin",radius=.05),makeMarker([l[1].at(-1),l[2].at(-1),l[3].at(-1)],[0,0,1],.33,"end_nospin",diameter=.25);let e=Math.round(.15/(l[0].at(-1)-l[0].at(-2))),t=(makeMarker([l[1].at(-e),l[2].at(-e),l[3].at(-e)],[0,0,0],1,"dp_nospin",diameter=.25),generateDiff(s,l));a=makeVector3List(t[0],t[1],t[2]),BABYLON.MeshBuilder.CreateLines("diff",{points:a,updatable:!0},plot_scene).color=new BABYLON.Color3(1,0,0)}}plot_canvas.addEventListener("wheel",function(e){e.preventDefault()},{passive:!1});const c=new BABYLON.TransformNode("rootNode",plot_scene);return plot_scene.meshes.forEach(e=>{e.parent=c}),c.scaling=new BABYLON.Vector3(1,1,1),r}function repositionCamera(){}function calcOdeRK4(e,t){const a=e.rk4(~~t),o=a.ts,n=a.ys.map(e=>e[0]),r=a.ys.map(e=>e[1]),i=a.ys.map(e=>e[2]);return[o,n,r,i]}function createAxes_plot(e=1.5,t=0){const a=[],o=[new BABYLON.Vector3(0,0,t),new BABYLON.Vector3(-e,0,t)],n=BABYLON.MeshBuilder.CreateTube("xAxis",{path:o,radius:.1},plot_scene);n.color=new BABYLON.Color3(1,0,0),a.push(n);const r=[new BABYLON.Vector3(0,0,t),new BABYLON.Vector3(0,e,t)],i=BABYLON.MeshBuilder.CreateTube("yAxis",{path:r,radius:.1},plot_scene);i.color=new BABYLON.Color3(0,1,0),a.push(i);const s=[new BABYLON.Vector3(0,0,t),new BABYLON.Vector3(0,0,t+e)],l=BABYLON.MeshBuilder.CreateTube("zAxis",{path:s,radius:.1},plot_scene);return l.color=new BABYLON.Color3(0,0,1),a.push(l),a}function createAxisLabel(e,t){const a=BABYLON.MeshBuilder.CreatePlane(e+"Plane",{size:.3},plot_scene);a.position=t;const o=new BABYLON.DynamicTexture(e+"Tex",{width:256,height:256},plot_scene),n=new BABYLON.StandardMaterial(e+"Mat",scene);n.diffuseTexture=o,n.diffuseTexture.hasAlpha=!0,a.material=n;const r=o.getContext();return r.clearRect(0,0,256,256),r.font="bold 120px Arial",r.fillStyle="black",r.textAlign="center",r.textBaseline="middle",r.fillText(e,128,128),o.update(),a.billboardMode=BABYLON.Mesh.BILLBOARDMODE_ALL,a}