class ODEsolver{constructor(t,s,i,r){this.ode=t,this.y0=s,this.t0=i,this.t1=r,isNaN(this.t0)&&console.warn("invalid starting time")}rk4(t){const s=1.417*.3048,i=(this.t1-this.t0)/t;var r=Array.from(Array(t+1),(t,s)=>s*i+this.t0),e=Array.from(Array(t+1),()=>Array(this.y0.length).fill(0));e[0]=this.y0,this.y0.includes(NaN)&&console.warn("y0 contains invalid starting value",this.y0);let a=t;for(let r=0;r<t;r++){const t=this.ode(e[r]),l=e[r].map((s,r)=>s+t[r]*i/2),n=this.ode(l),o=e[r].map((t,s)=>t+n[s]*i/2),h=this.ode(o),y=e[r].map((t,s)=>t+h[s]*i),c=this.ode(y);if(e[r+1]=e[r].map((s,r)=>s+(t[r]/6+n[r]/3+h[r]/3+c[r]/6)*i),e[r+1][1]<s){a=r+1;break}}r=r.slice(0,a+1),e=e.slice(0,a+1);const l=5e3,n=Array.from({length:l},(t,s)=>r[0]+(r.at(-1)-r[0])*s/4999),o=Array.from({length:l},()=>Array(this.y0.length).fill(0));for(let t=0;t<this.y0.length;t++)for(let s=0;s<l;s++){const i=n[s];let a=r.findIndex(t=>t>=i);if(0===a)o[s][t]=e[0][t];else if(-1===a)o[s][t]=e.at(-1)[t];else{const l=r[a-1],n=r[a],h=e[a-1][t],y=e[a][t],c=(i-l)/(n-l);o[s][t]=h*(1-c)+y*c}}return{ts:n,ys:o}}}